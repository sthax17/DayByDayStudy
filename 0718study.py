# -*- coding: utf-8 -*-
"""0718study.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g31jwG7b_mb9PTJAlh7AqesiU-YcQuwW
"""

a = list(range(100))
print(list(map(lambda number: number * number, a)))
print([i * i for i in a if i % 2 == 0])

a = list(range(100))
print(a)
print(map(lambda x: x *x, a))
#호출되기전까지는 가상의 값만을 가지고 있기에 메모리 절약...

# 함수를 선언합니다.
def power(item):
  return item * item
def under_3(item):
  return item < 3

#변수를 선언합니다.
list_input_a = [1, 2, 3, 4, 5]

#map() 함수를 사용합니다.
output_a = map(power, list_input_a)
print("# map() 함수의 실행결과")
print('map(power, list_input_a):', output_a)
print('map(power, list_input_a):', list(output_a))
print()

#filter() 함수를 사용합니다.
output_b = filter(under_3, list_input_a)
print('# filter() 함수의 실행결과')
print('fiter(under_3, list_input_a):', output_b)
print('fiter(under_3, list_input_a):', list(output_b))

#변수를 선언합니다.
list_input_a = [1, 2, 3, 4, 5]

#map() 함수를 사용합니다.
output_a = map(lambda x: x * x, list_input_a)
print('#map() 함수의 실행결과')
print('map(power, list_input_a):', output_a)
print('#map() 함수의 실행결과')
print('map(under_3, list_input_a):', output_a)
print('map(under_3, list_input_a):', list(output_a))
print()

#filter() 함수를 사용합니다.
output_b = filter(lambda x: x < 3, list_input_a)
print('#filter() 함수의 실행결과')
print('filter(under_3, list_input_a):', output_b)
print('filter(under_3, list_input_a):', list(output_b))